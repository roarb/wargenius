// JavaScript Document
var beastmen = new Array ();
	beastmen[0] = ("Ungor Herd"); // ungorHerd
	beastmen[1] = ("Gor Herd"); // gorHerd
	beastmen[2] = ("Chaos Warhounds"); // chaosWarhoundsBeastmen
	beastmen[3] = ("Bestigor Herd"); // bestigorHerd
	beastmen[4] = ("Minotaurs"); // minotaurs
	beastmen[5] = ("Centigor Herd"); //centigorHerd
	beastmen[6] = ("Harpies"); // harpiesBeastmen
	
	
var ungorHerd = new Array ();
	ungorHerd['name'] = ("Ungor Herd"); // user friendly name
	ungorHerd['WS'] = (3); // weapon skill
	ungorHerd['S'] = (3); // normal strength
	ungorHerd['WepS'] = (0); // strength added by the weapon
	ungorHerd['T'] = (3); // toughness
	ungorHerd['W'] = (1); // wounds
	ungorHerd['I'] = (3); // initiaive
	ungorHerd['A'] = (1); // attacks
	ungorHerd['AS'] = (6); // armor save amount
	ungorHerd['parry'] = (1);
	ungorHerd['rank'] = (2); // how many ranks deep can attack
	ungorHerd['basesize'] = (25); // base width in mm 20, 25, 40, 50
	ungorHerd['maxsize'] = (100); // max number of models in the unit
	ungorHerd['minsize'] = (10); // min number of models in the unit
	ungorHerd['LD'] = (6); // leadership
	ungorHerd['options'] = new Array();
		ungorHerd['options']['charge'] = (1);
		ungorHerd['options']['champion'] = (1); // chamption 0 not an option 1 is an option
		ungorHerd['options']['musician'] = (1); // musician 0 not an option 1 is an option
		ungorHerd['options']['standard'] = (1); // standard 0 not an option 1 is an option
		ungorHerd['options']['spears'] = (1);
		
var gorHerd = new Array ();
	gorHerd['name'] = ("Gor Herd"); // user friendly name
	gorHerd['WS'] = (4); // weapon skill
	gorHerd['S'] = (3); // normal strength
	gorHerd['WepS'] = (0); // strength added by the weapon
	gorHerd['T'] = (4); // toughness
	gorHerd['W'] = (1); // wounds
	gorHerd['I'] = (3); // initiaive
	gorHerd['A'] = (1); // attacks
	gorHerd['AS'] = (7); // armor save amount
	gorHerd['parry'] = (2);
	gorHerd['rank'] = (2); // how many ranks deep can attack
	gorHerd['basesize'] = (25); // base width in mm 20, 25, 40, 50
	gorHerd['maxsize'] = (100); // max number of models in the unit
	gorHerd['minsize'] = (10); // min number of models in the unit
	gorHerd['LD'] = (7); // leadership
	gorHerd['options'] = new Array();
		gorHerd['options']['charge'] = (1);
		gorHerd['options']['champion'] = (1); // chamption 0 not an option 1 is an option
		gorHerd['options']['musician'] = (1); // musician 0 not an option 1 is an option
		gorHerd['options']['standard'] = (1); // standard 0 not an option 1 is an option
		gorHerd['options']['adHandWep'] = (1);
		gorHerd['options']['shield'] = (1);
		
var chaosWarhoundsBeastmen = new Array ();
	chaosWarhoundsBeastmen['name'] = ("Chaos Warhounds"); // user friendly name
	chaosWarhoundsBeastmen['WS'] = (4); // weapon skill
	chaosWarhoundsBeastmen['S'] = (3); // normal strength
	chaosWarhoundsBeastmen['WepS'] = (0); // strength added by the weapon
	chaosWarhoundsBeastmen['T'] = (3); // toughness
	chaosWarhoundsBeastmen['W'] = (1); // wounds
	chaosWarhoundsBeastmen['I'] = (3); // initiaive
	chaosWarhoundsBeastmen['A'] = (1); // attacks
	chaosWarhoundsBeastmen['AS'] = (7); // armor save amount
	chaosWarhoundsBeastmen['rank'] = (2); // how many ranks deep can attack
	chaosWarhoundsBeastmen['basesize'] = (25); // base width in mm 20, 25, 40, 50
	chaosWarhoundsBeastmen['cavbase'] = (1);
	chaosWarhoundsBeastmen['stomp'] = (.5);
	chaosWarhoundsBeastmen['maxsize'] = (100); // max number of models in the unit
	chaosWarhoundsBeastmen['minsize'] = (5); // min number of models in the unit
	chaosWarhoundsBeastmen['LD'] = (5); // leadership
	chaosWarhoundsBeastmen['options'] = new Array();
		chaosWarhoundsBeastmen['options']['charge'] = (1);
		chaosWarhoundsBeastmen['options']['lightArmor'] = (1);
		chaosWarhoundsBeastmen['options']['poison'] = (1);		
		
var centigorHerd = new Array ();
	centigorHerd['name'] = ("Centigor Herd"); // user friendly name
	centigorHerd['WS'] = (5); // weapon skill
	centigorHerd['S'] = (4); // normal strength
	centigorHerd['WepS'] = (0); // strength added by the weapon
	centigorHerd['charge'] = new Array
		centigorHerd['charge']['spears'] = (1);
	centigorHerd['T'] = (4); // toughness
	centigorHerd['W'] = (1); // wounds
	centigorHerd['I'] = (2); // initiaive
	centigorHerd['A'] = (2); // attacks
	centigorHerd['AS'] = (4); // armor save amount
	centigorHerd['rank'] = (2); // how many ranks deep can attack
	centigorHerd['basesize'] = (25); // base width in mm 20, 25, 40, 50
	centigorHerd['stomp'] = (.5);
	centigorHerd['cavbase'] = (1);
	centigorHerd['maxsize'] = (100); // max number of models in the unit
	centigorHerd['minsize'] = (5); // min number of models in the unit
	centigorHerd['LD'] = (7); // leadership
	centigorHerd['options'] = new Array();
		centigorHerd['options']['charge'] = (1);
		centigorHerd['options']['champion'] = (1);
		centigorHerd['options']['standard'] = (1);
		centigorHerd['options']['musician'] = (1);
		centigorHerd['options']['greatWep'] = (1);
	centigorHerd['mounted'] = new Array
		centigorHerd['mounted']['A'] = (0);
		
var minotaurs = new Array ();
	minotaurs['name'] = ("Minotaurs"); // user friendly name
	minotaurs['WS'] = (4); // weapon skill
	minotaurs['S'] = (5); // normal strength
	minotaurs['WepS'] = (0); // strength added by the weapon
	minotaurs['T'] = (4); // toughness
	minotaurs['W'] = (3); // wounds
	minotaurs['I'] = (3); // initiaive
	minotaurs['A'] = (3); // attacks
	minotaurs['AS'] = (6); // armor save amount
	minotaurs['rank'] = (2); // how many ranks deep can attack
	minotaurs['basesize'] = (40); // base width in mm 20, 25, 40, 50
	minotaurs['stomp'] = (1);
	minotaurs['maxsize'] = (100); // max number of models in the unit
	minotaurs['minsize'] = (3); // min number of models in the unit
	minotaurs['impact'] = (1);
	minotaurs['LD'] = (7); // leadership
	minotaurs['options'] = new Array();
		minotaurs['options']['charge'] = (1);
		minotaurs['options']['champion'] = (1);
		minotaurs['options']['standard'] = (1);
		minotaurs['options']['musician'] = (1);
		minotaurs['options']['shield'] = (1);
		minotaurs['options']['greatWep'] = (1);
		minotaurs['options']['adHandWep'] = (1);		
		
var harpiesBeastmen = new Array ();
	harpiesBeastmen['name'] = ("Harpies"); // user friendly name
	harpiesBeastmen['WS'] = (3); // weapon skill
	harpiesBeastmen['S'] = (3); // normal strength
	harpiesBeastmen['WepS'] = (0); // strength added by the weapon
	harpiesBeastmen['T'] = (3); // toughness
	harpiesBeastmen['W'] = (1); // wounds
	harpiesBeastmen['I'] = (5); // initiaive
	harpiesBeastmen['A'] = (2); // attacks
	harpiesBeastmen['AS'] = (7); // armor save amount
	harpiesBeastmen['rank'] = (2); // how many ranks deep can attack
	harpiesBeastmen['basesize'] = (25); // base width in mm 20, 25, 40, 50
	harpiesBeastmen['maxsize'] = (10); // max number of models in the unit
	harpiesBeastmen['minsize'] = (5); // min number of models in the unit
	harpiesBeastmen['LD'] = (6); // leadership
	harpiesBeastmen['options'] = new Array();
		harpiesBeastmen['options']['charge'] = (1);
		
var bestigorHerd = new Array ();
	bestigorHerd['name'] = ("Bestigor Herd"); // user friendly name
	bestigorHerd['WS'] = (4); // weapon skill
	bestigorHerd['S'] = (4); // normal strength
	bestigorHerd['WepS'] = (2); // strength added by the weapon
	bestigorHerd['T'] = (4); // toughness
	bestigorHerd['W'] = (1); // wounds
	bestigorHerd['I'] = (3); // initiaive
	bestigorHerd['A'] = (1); // attacks
	bestigorHerd['AS'] = (5); // armor save amount
	bestigorHerd['ASL'] = (1);
	bestigorHerd['parry'] = (2);
	bestigorHerd['rank'] = (2); // how many ranks deep can attack
	bestigorHerd['basesize'] = (25); // base width in mm 20, 25, 40, 50
	bestigorHerd['maxsize'] = (100); // max number of models in the unit
	bestigorHerd['minsize'] = (10); // min number of models in the unit
	bestigorHerd['LD'] = (7); // leadership
	bestigorHerd['options'] = new Array();
		bestigorHerd['options']['charge'] = (1);
		bestigorHerd['options']['champion'] = (1); // chamption 0 not an option 1 is an option
		bestigorHerd['options']['musician'] = (1); // musician 0 not an option 1 is an option
		bestigorHerd['options']['standard'] = (1); // standard 0 not an option 1 is an option
